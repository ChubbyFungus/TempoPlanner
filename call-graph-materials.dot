digraph materialsCalls {
  rankdir=LR;
  node [shape=box, style=filled, fillcolor=lightblue];
  edge [color=darkblue];

  subgraph "cluster_three_ts" {
    label="three.ts";
    style=filled;
    color=lightgrey;

  }

  subgraph "cluster_materials_ts" {
    label="materials.ts";
    style=filled;
    color=lightgrey;

  }

  subgraph "cluster_pbrMaterialManager_ts" {
    label="pbrMaterialManager.ts";
    style=filled;
    color=lightgrey;

    n453 [label="getTexturePath"];
    n454 [label="String"];
    n453 -> n454;
    n455 [label="loadTexture"];
    n456 [label="Logger.debug"];
    n455 -> n456;
    n457 [label="textureCache.has"];
    n455 -> n457;
    n458 [label="textureCache.get"];
    n455 -> n458;
    n459 [label="textureLoader.loadAsync"];
    n455 -> n459;
    n460 [label="textureCache.set"];
    n455 -> n460;
    n461 [label="Logger.error"];
    n455 -> n461;
    n454 [label="String"];
    n455 -> n454;
    n462 [label="loadMaterialTextures"];
    n456 [label="Logger.debug"];
    n462 -> n456;
    n463 [label="Promise.all"];
    n462 -> n463;
    n464 [label="textureTypes.map"];
    n462 -> n464;
    n465 [label="Logger.info"];
    n462 -> n465;
    n466 [label="Object.fromEntries"];
    n462 -> n466;
    n461 [label="Logger.error"];
    n462 -> n461;
    n454 [label="String"];
    n462 -> n454;
    n467 [label="anonymous"];
    n453 [label="getTexturePath"];
    n467 -> n453;
    n455 [label="loadTexture"];
    n467 -> n455;
    n468 [label="material.dispose"];
    n467 -> n468;
    n469 [label="texture.dispose"];
    n467 -> n469;
    n470 [label="createPBRMaterial"];
    n467 -> n470;
    n470 [label="createPBRMaterial"];
    n456 [label="Logger.debug"];
    n470 -> n456;
    n471 [label="Logger.warn"];
    n470 -> n471;
    n472 [label="JSON.stringify"];
    n470 -> n472;
    n473 [label="materialCache.has"];
    n470 -> n473;
    n474 [label="materialCache.get"];
    n470 -> n474;
    n475 [label="getMaterialColor"];
    n470 -> n475;
    n465 [label="Logger.info"];
    n470 -> n465;
    n476 [label="materialCache.set"];
    n470 -> n476;
    n475 [label="getMaterialColor"];
    n471 [label="Logger.warn"];
    n475 -> n471;
    n477 [label="clearMaterialCache"];
    n478 [label="materialCache.forEach"];
    n477 -> n478;
    n479 [label="materialCache.clear"];
    n477 -> n479;
    n480 [label="textureCache.forEach"];
    n477 -> n480;
    n481 [label="textureCache.clear"];
    n477 -> n481;
    n482 [label="getAvailableMaterials"];
    n483 [label="MATERIAL_IDS.filter"];
    n482 -> n483;
    n484 [label="preloadCommonMaterials"];
    n463 [label="Promise.all"];
    n484 -> n463;
    n485 [label="commonMaterials.map"];
    n484 -> n485;
  }

  subgraph "cluster_materials_ts" {
    label="materials.ts";
    style=filled;
    color=lightgrey;

  }

  subgraph "cluster_useMaterialPreset_ts" {
    label="useMaterialPreset.ts";
    style=filled;
    color=lightgrey;

    n486 [label="materialPreset"];
    n487 [label="useMemo"];
    n486 -> n487;
    n488 [label="useMaterialPreset"];
    n487 [label="useMemo"];
    n488 -> n487;
  }

  subgraph "cluster_ThreeMaterialRenderer_tsx" {
    label="ThreeMaterialRenderer.tsx";
    style=filled;
    color=lightgrey;

    n224 [label="anonymous"];
    n223 [label="useRef"];
    n224 -> n223;
    n489 [label="Math.random().toString(36).substring"];
    n224 -> n489;
    n490 [label="Math.random().toString"];
    n224 -> n490;
    n491 [label="Math.random"];
    n224 -> n491;
    n492 [label="Logger.debug"];
    n224 -> n492;
    n225 [label="useState"];
    n224 -> n225;
    n493 [label="useModel"];
    n224 -> n493;
    n494 [label="useMaterialPreset"];
    n224 -> n494;
    n226 [label="useEffect"];
    n224 -> n226;
    n495 [label="DRACOLoader.setDecoderPath"];
    n224 -> n495;
    n496 [label="DRACOLoader.preload"];
    n224 -> n496;
    n497 [label="GLTFLoader.setDRACOLoader"];
    n224 -> n497;
    n498 [label="Logger.error"];
    n224 -> n498;
    n499 [label="Vector3.set"];
    n224 -> n499;
    n500 [label="document.createElement"];
    n224 -> n500;
    n501 [label="container.appendChild"];
    n224 -> n501;
    n502 [label="WebGLRenderer.getContext"];
    n224 -> n502;
    n503 [label="WebGLRenderer.setSize"];
    n224 -> n503;
    n504 [label="WebGLRenderer.setPixelRatio"];
    n224 -> n504;
    n505 [label="Math.min"];
    n224 -> n505;
    n506 [label="gl.hint"];
    n224 -> n506;
    n507 [label="Scene.add"];
    n224 -> n507;
    n508 [label="Logger.info"];
    n224 -> n508;
    n509 [label="WebGLRenderer.getPixelRatio"];
    n224 -> n509;
    n510 [label="PerspectiveCamera.updateProjectionMatrix"];
    n224 -> n510;
    n511 [label="window.addEventListener"];
    n224 -> n511;
    n512 [label="handleResize"];
    n224 -> n512;
    n513 [label="requestAnimationFrame"];
    n224 -> n513;
    n514 [label="OrbitControls.update"];
    n224 -> n514;
    n515 [label="WebGLRenderer.render"];
    n224 -> n515;
    n516 [label="animate"];
    n224 -> n516;
    n517 [label="cancelAnimationFrame"];
    n224 -> n517;
    n518 [label="OrbitControls.dispose"];
    n224 -> n518;
    n519 [label="Scene.traverse"];
    n224 -> n519;
    n520 [label="object.geometry.dispose"];
    n224 -> n520;
    n521 [label="Array.isArray"];
    n224 -> n521;
    n522 [label="object.material.forEach"];
    n224 -> n522;
    n523 [label="material.dispose"];
    n224 -> n523;
    n524 [label="object.material.dispose"];
    n224 -> n524;
    n525 [label="Scene.clear"];
    n224 -> n525;
    n526 [label="WebGLRenderer.dispose"];
    n224 -> n526;
    n527 [label="WebGLRenderer.forceContextLoss"];
    n224 -> n527;
    n528 [label="gl.getExtension"];
    n224 -> n528;
    n529 [label="loseContext.loseContext"];
    n224 -> n529;
    n530 [label="canvasRef.current.parentNode.removeChild"];
    n224 -> n530;
    n531 [label="window.removeEventListener"];
    n224 -> n531;
    n532 [label="type.includes"];
    n224 -> n532;
    n533 [label="setIsLoading"];
    n224 -> n533;
    n534 [label="Logger.warn"];
    n224 -> n534;
    n535 [label="setError"];
    n224 -> n535;
    n536 [label="getApplianceModelPath"];
    n224 -> n536;
    n537 [label="loadModelProgressively"];
    n224 -> n537;
    n538 [label="progress.toFixed"];
    n224 -> n538;
    n539 [label="setLoadingProgress"];
    n224 -> n539;
    n540 [label="sceneRef.current.children.filter"];
    n224 -> n540;
    n541 [label="lights.forEach"];
    n224 -> n541;
    n542 [label="sceneRef.current.add"];
    n224 -> n542;
    n543 [label="result.traverse"];
    n224 -> n543;
    n544 [label="result.rotation.set"];
    n224 -> n544;
    n545 [label="Box3.setFromObject"];
    n224 -> n545;
    n546 [label="Box3.getCenter"];
    n224 -> n546;
    n547 [label="Box3.getSize"];
    n224 -> n547;
    n548 [label="Vector3.toArray"];
    n224 -> n548;
    n549 [label="Math.max"];
    n224 -> n549;
    n550 [label="Math.abs"];
    n224 -> n550;
    n551 [label="Math.sin"];
    n224 -> n551;
    n552 [label="PerspectiveCamera.lookAt"];
    n224 -> n552;
    n553 [label="Vector3.copy"];
    n224 -> n553;
    n554 [label="String"];
    n224 -> n554;
    n229 [label="loadModel"];
    n224 -> n229;
    n555 [label="loadingProgress.toFixed"];
    n224 -> n555;
    n556 [label="containerRef"];
    n223 [label="useRef"];
    n556 -> n223;
    n557 [label="canvasRef"];
    n223 [label="useRef"];
    n557 -> n223;
    n558 [label="sceneRef"];
    n223 [label="useRef"];
    n558 -> n223;
    n559 [label="rendererRef"];
    n223 [label="useRef"];
    n559 -> n223;
    n560 [label="cameraRef"];
    n223 [label="useRef"];
    n560 -> n223;
    n561 [label="controlsRef"];
    n223 [label="useRef"];
    n561 -> n223;
    n562 [label="frameRef"];
    n223 [label="useRef"];
    n562 -> n223;
    n563 [label="loaderRef"];
    n223 [label="useRef"];
    n563 -> n223;
    n564 [label="dracoLoaderRef"];
    n223 [label="useRef"];
    n564 -> n223;
    n565 [label="[isLoading, setIsLoading]"];
    n225 [label="useState"];
    n565 -> n225;
    n566 [label="[error, setError]"];
    n225 [label="useState"];
    n566 -> n225;
    n567 [label="[loadingProgress, setLoadingProgress]"];
    n225 [label="useState"];
    n567 -> n225;
    n568 [label="{ model }"];
    n493 [label="useModel"];
    n568 -> n493;
    n569 [label="preset"];
    n494 [label="useMaterialPreset"];
    n569 -> n494;
  }

  subgraph "cluster_ThreeMaterialViewer_tsx" {
    label="ThreeMaterialViewer.tsx";
    style=filled;
    color=lightgrey;

    n570 [label="anonymous"];
    n571 [label="useRef"];
    n570 -> n571;
    n572 [label="Math.random().toString(36).substring"];
    n570 -> n572;
    n573 [label="Math.random().toString"];
    n570 -> n573;
    n574 [label="Math.random"];
    n570 -> n574;
    n575 [label="Logger.debug"];
    n570 -> n575;
    n576 [label="useState"];
    n570 -> n576;
    n577 [label="useModel"];
    n570 -> n577;
    n578 [label="useMaterialPreset"];
    n570 -> n578;
    n579 [label="useEffect"];
    n570 -> n579;
    n580 [label="DRACOLoader.setDecoderPath"];
    n570 -> n580;
    n581 [label="DRACOLoader.preload"];
    n570 -> n581;
    n582 [label="GLTFLoader.setDRACOLoader"];
    n570 -> n582;
    n583 [label="Logger.error"];
    n570 -> n583;
    n584 [label="Vector3.set"];
    n570 -> n584;
    n585 [label="document.createElement"];
    n570 -> n585;
    n586 [label="container.appendChild"];
    n570 -> n586;
    n587 [label="WebGLRenderer.getContext"];
    n570 -> n587;
    n588 [label="WebGLRenderer.setSize"];
    n570 -> n588;
    n589 [label="WebGLRenderer.setPixelRatio"];
    n570 -> n589;
    n590 [label="Math.min"];
    n570 -> n590;
    n591 [label="gl.hint"];
    n570 -> n591;
    n592 [label="Scene.add"];
    n570 -> n592;
    n593 [label="Logger.info"];
    n570 -> n593;
    n594 [label="WebGLRenderer.getPixelRatio"];
    n570 -> n594;
    n595 [label="PerspectiveCamera.updateProjectionMatrix"];
    n570 -> n595;
    n596 [label="window.addEventListener"];
    n570 -> n596;
    n597 [label="handleResize"];
    n570 -> n597;
    n598 [label="requestAnimationFrame"];
    n570 -> n598;
    n599 [label="OrbitControls.update"];
    n570 -> n599;
    n600 [label="WebGLRenderer.render"];
    n570 -> n600;
    n601 [label="animate"];
    n570 -> n601;
    n602 [label="cancelAnimationFrame"];
    n570 -> n602;
    n603 [label="OrbitControls.dispose"];
    n570 -> n603;
    n604 [label="Scene.traverse"];
    n570 -> n604;
    n605 [label="object.geometry.dispose"];
    n570 -> n605;
    n606 [label="Array.isArray"];
    n570 -> n606;
    n607 [label="object.material.forEach"];
    n570 -> n607;
    n608 [label="material.dispose"];
    n570 -> n608;
    n609 [label="object.material.dispose"];
    n570 -> n609;
    n610 [label="Scene.clear"];
    n570 -> n610;
    n611 [label="WebGLRenderer.dispose"];
    n570 -> n611;
    n612 [label="WebGLRenderer.forceContextLoss"];
    n570 -> n612;
    n613 [label="gl.getExtension"];
    n570 -> n613;
    n614 [label="loseContext.loseContext"];
    n570 -> n614;
    n615 [label="canvasRef.current.parentNode.removeChild"];
    n570 -> n615;
    n616 [label="window.removeEventListener"];
    n570 -> n616;
    n617 [label="type.includes"];
    n570 -> n617;
    n618 [label="setIsLoading"];
    n570 -> n618;
    n619 [label="Logger.warn"];
    n570 -> n619;
    n620 [label="setError"];
    n570 -> n620;
    n621 [label="getApplianceModelPath"];
    n570 -> n621;
    n622 [label="loadModelProgressively"];
    n570 -> n622;
    n623 [label="progress.toFixed"];
    n570 -> n623;
    n624 [label="setLoadingProgress"];
    n570 -> n624;
    n625 [label="sceneRef.current.children.filter"];
    n570 -> n625;
    n626 [label="lights.forEach"];
    n570 -> n626;
    n627 [label="sceneRef.current.add"];
    n570 -> n627;
    n628 [label="result.traverse"];
    n570 -> n628;
    n629 [label="result.rotation.set"];
    n570 -> n629;
    n630 [label="Box3.setFromObject"];
    n570 -> n630;
    n631 [label="Box3.getCenter"];
    n570 -> n631;
    n632 [label="Box3.getSize"];
    n570 -> n632;
    n633 [label="Vector3.toArray"];
    n570 -> n633;
    n634 [label="Math.max"];
    n570 -> n634;
    n635 [label="Math.abs"];
    n570 -> n635;
    n636 [label="Math.sin"];
    n570 -> n636;
    n637 [label="PerspectiveCamera.lookAt"];
    n570 -> n637;
    n638 [label="Vector3.copy"];
    n570 -> n638;
    n639 [label="String"];
    n570 -> n639;
    n640 [label="loadModel"];
    n570 -> n640;
    n641 [label="loadingProgress.toFixed"];
    n570 -> n641;
    n642 [label="containerRef"];
    n571 [label="useRef"];
    n642 -> n571;
    n643 [label="canvasRef"];
    n571 [label="useRef"];
    n643 -> n571;
    n644 [label="sceneRef"];
    n571 [label="useRef"];
    n644 -> n571;
    n645 [label="rendererRef"];
    n571 [label="useRef"];
    n645 -> n571;
    n646 [label="cameraRef"];
    n571 [label="useRef"];
    n646 -> n571;
    n647 [label="controlsRef"];
    n571 [label="useRef"];
    n647 -> n571;
    n648 [label="frameRef"];
    n571 [label="useRef"];
    n648 -> n571;
    n649 [label="loaderRef"];
    n571 [label="useRef"];
    n649 -> n571;
    n650 [label="dracoLoaderRef"];
    n571 [label="useRef"];
    n650 -> n571;
    n651 [label="[isLoading, setIsLoading]"];
    n576 [label="useState"];
    n651 -> n576;
    n652 [label="[error, setError]"];
    n576 [label="useState"];
    n652 -> n576;
    n653 [label="[loadingProgress, setLoadingProgress]"];
    n576 [label="useState"];
    n653 -> n576;
    n654 [label="{ model }"];
    n577 [label="useModel"];
    n654 -> n577;
    n655 [label="preset"];
    n578 [label="useMaterialPreset"];
    n655 -> n578;
  }

  subgraph "cluster_materialPresetHelpers_ts" {
    label="materialPresetHelpers.ts";
    style=filled;
    color=lightgrey;

  }

  subgraph "cluster_materialPresets_ts" {
    label="materialPresets.ts";
    style=filled;
    color=lightgrey;

    n656 [label="getMaterialPreset"];
    n657 [label="elementType.includes"];
    n656 -> n657;
  }

  subgraph "cluster_materialUtils_ts" {
    label="materialUtils.ts";
    style=filled;
    color=lightgrey;

    n658 [label="applyMaterialPreset"];
    n659 [label="model.traverse"];
    n658 -> n659;
    n660 [label="applyOverlayPreset"];
    n659 [label="model.traverse"];
    n660 -> n659;
    n661 [label="anonymous"];
    n662 [label="material.emissive.setHex"];
    n661 -> n662;
  }

  subgraph "cluster_brushedMetal_ts" {
    label="brushedMetal.ts";
    style=filled;
    color=lightgrey;

    n663 [label="BrushedMetalMaterial.setBrushScale"];
    n664 [label="this.uniforms.brushScale.value.set"];
    n663 -> n664;
  }

  subgraph "cluster_materialUtils_ts" {
    label="materialUtils.ts";
    style=filled;
    color=lightgrey;

    n661 [label="anonymous"];
    n665 [label="textureLoader.load"];
    n661 -> n665;
    n666 [label="material.normalScale.set"];
    n661 -> n666;
    n667 [label="overlayMap.repeat.set"];
    n661 -> n667;
    n668 [label="Math.min"];
    n661 -> n668;
    n669 [label="Math.max"];
    n661 -> n669;
  }

}
